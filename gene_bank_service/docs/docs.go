// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Naveen R",
            "url": "https://naveen2070.github.io/portfolio",
            "email": "naveenrameshcud@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/actuator/health": {
            "get": {
                "description": "Get actuator health status based on queue and RabbitMQ statuses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actuator"
                ],
                "summary": "Get actuator health status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flora": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flora"
                ],
                "summary": "Retrieve flora data from the database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FloraResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flora"
                ],
                "summary": "Update a flora data in the database",
                "parameters": [
                    {
                        "description": "Flora data",
                        "name": "flora",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FloraUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flora"
                ],
                "summary": "Add a flora data to the database",
                "parameters": [
                    {
                        "description": "Flora data",
                        "name": "flora",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FloraRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flora/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flora"
                ],
                "summary": "Retrieve flora data by ID from the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Flora ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FloraResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "common.SuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.FloraData": {
            "type": "object",
            "properties": {
                "common_name": {
                    "description": "Common name of the plant",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the plant",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "string"
                },
                "image": {
                    "description": "Base64-encoded image",
                    "type": "string"
                },
                "origin": {
                    "description": "Geographical origin",
                    "type": "string"
                },
                "other_details": {
                    "description": "Additional details as key-value pairs",
                    "type": "object",
                    "additionalProperties": true
                },
                "scientific_name": {
                    "description": "Scientific name of the plant",
                    "type": "string"
                },
                "type": {
                    "description": "Type of flora (e.g., public/private)",
                    "type": "string"
                },
                "user_id": {
                    "description": "User associated with this flora",
                    "type": "string"
                }
            }
        },
        "dto.FloraRequest": {
            "type": "object",
            "properties": {
                "common_name": {
                    "description": "Common name of the plant",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the plant",
                    "type": "string"
                },
                "image_path": {
                    "description": "Image URL or file reference",
                    "type": "string"
                },
                "image_url": {
                    "description": "Image URL or file reference",
                    "type": "string"
                },
                "origin": {
                    "description": "Origin of the plant",
                    "type": "string"
                },
                "other_details": {
                    "description": "Additional details about the plant",
                    "type": "object",
                    "additionalProperties": true
                },
                "scientific_name": {
                    "description": "Scientific name of the plant",
                    "type": "string"
                },
                "type": {
                    "description": "Type of post",
                    "type": "string"
                }
            }
        },
        "dto.FloraResponse": {
            "type": "object",
            "properties": {
                "flora": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FloraData"
                    }
                }
            }
        },
        "dto.FloraUpdateRequest": {
            "type": "object",
            "properties": {
                "common_name": {
                    "description": "Common name of the plant",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the plant",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the plant",
                    "type": "string"
                },
                "image": {
                    "description": "Image data (bytes)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "image_path": {
                    "description": "Image URL or file reference",
                    "type": "string"
                },
                "image_url": {
                    "description": "Image URL or file reference",
                    "type": "string"
                },
                "origin": {
                    "description": "Origin of the plant",
                    "type": "string"
                },
                "other_details": {
                    "description": "Additional details about the plant",
                    "type": "object",
                    "additionalProperties": true
                },
                "scientific_name": {
                    "description": "Scientific name of the plant",
                    "type": "string"
                },
                "type": {
                    "description": "Type of post",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Gene Bank Service API",
	Description:      "This API provides endpoints for gene bank service which is a part of the project chimera.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
